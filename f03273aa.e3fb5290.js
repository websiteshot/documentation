(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{129:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var o=n(3),r=n(7),a=(n(0),n(138)),s={slug:"welcome",title:"Welcome to Websiteshot!",author:"Adam Urban",author_title:"Founder of Websiteshot",author_url:"https://github.com/urbanisierung",author_image_url:"https://avatars3.githubusercontent.com/u/1721647?s=460&v=4",tags:["websiteshot","hello","wow"]},i={permalink:"/blog/welcome",editUrl:"https://github.com/websiteshot/documentation/edit/main/blog/blog/2021-02-08-welcome.md",source:"@site/blog/2021-02-08-welcome.md",description:"The idea for this already exists since the first time I had to take screenshots of a website. There are one-time screenshots, to have an ad-hoc snapshot, and screenshots that need to be taken over and over again. And there are those moments when I get annoyed why I don't have screenshots of older versions of certain products I've worked on. It's always nice to look back and see how a product has evolved.",date:"2021-02-08T00:00:00.000Z",tags:[{label:"websiteshot",permalink:"/blog/tags/websiteshot"},{label:"hello",permalink:"/blog/tags/hello"},{label:"wow",permalink:"/blog/tags/wow"}],title:"Welcome to Websiteshot!",readingTime:.95,truncated:!1},c=[],l={toc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The idea for this already exists since the first time I had to take screenshots of a website. There are one-time screenshots, to have an ad-hoc snapshot, and screenshots that need to be taken over and over again. And there are those moments when I get annoyed why I don't have screenshots of older versions of certain products I've worked on. It's always nice to look back and see how a product has evolved."),Object(a.b)("p",null,"But it's mostly the repetitive tasks that come up when products change and a lot of screenshots need to be regenerated. No question, this needs to be automated! And that's how Websiteshot came to be. A way to anchor the screenshot process into your own pipeline, so that once an integration needs to be implemented, but then the rest just happens. How nice it is when screenshot generation at least just needs to be triggered, but ideally can be generated automatically and uploaded to a bucket so you don't have to worry about it anymore."),Object(a.b)("p",null,"I'm super excited to launch Websiteshot Beta today! \ud83d\ude80"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Let's never waste time updating screenshots on a regular basis again!")),Object(a.b)("p",null,"Adam"))}u.isMDXComponent=!0},138:function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return b}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),h=u(n),p=o,b=h["".concat(s,".").concat(p)]||h[p]||d[p]||a;return n?r.a.createElement(b,i(i({ref:t},l),{},{components:n})):r.a.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);